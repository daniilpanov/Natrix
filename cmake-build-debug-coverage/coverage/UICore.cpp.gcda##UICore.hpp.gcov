        -:    0:Source:/home/daniel/Projects/C++/Natrix/src/UI/UICore.hpp
        -:    0:Graph:/home/daniel/Projects/C++/Natrix/cmake-build-debug-coverage/CMakeFiles/Natrix.dir/src/UI/UICore.cpp.gcno
        -:    0:Data:/home/daniel/Projects/C++/Natrix/cmake-build-debug-coverage/CMakeFiles/Natrix.dir/src/UI/UICore.cpp.gcda
        -:    0:Runs:1
        -:    1:#include <iostream>
        -:    2:#include <vector>
        -:    3:#include <tuple>
        -:    4:#include <SDL2/SDL.h>
        -:    5:#include <SDL2/SDL_image.h>
        -:    6:#include <SDL2/SDL_mixer.h>
        -:    7:#include <SDL2/SDL_ttf.h>
        -:    8:#include "../ANSI.hpp"
        -:    9:
        -:   10:
        -:   11:#pragma once
        -:   12:
        -:   13:
function _ZN6UICoreC2Ev called 1 returned 100% blocks executed 100%
        1:   14:class UICore {
        -:   15:public:
        -:   16:    UICore();
        -:   17:    UICore(int sdl_init_code, int sdl_image_init_code, int sdl_mixer_init_code, int audio_frequency, Uint16 audio_format, int audio_channels, int audio_chunk_size);
        -:   18:
        -:   19:    void set_window(int type, int x, int y, int width, int height, const std::string& title, const std::string& logotype_path);
        -:   20:    void set_renderer(int renderer_type, float global_scale_x, float global_scale_y);
        -:   21:
        -:   22:    void load_texture(const std::string& path, const std::string& name);
        -:   23:    void load_sound(const std::string& path, const std::string& name);
        -:   24:    void load_font(const std::string& path, int size, const std::string& name);
        -:   25:
        -:   26:    void clear();
        -:   27:    void draw_texture(const std::string& name, int x, int y, bool correct_pos, float scale, float alpha);
        -:   28:    void draw_rectangle(int x, int y, int width, int height, int red, int green, int blue, int alpha);
        -:   29:    void draw_text(const std::string& name, const std::string& text, int x, int y, Uint8 red, Uint8 green, Uint8 blue, Uint8 alpha);
        -:   30:    void update();
        -:   31:
        -:   32:    void play_sound(const std::string& name, int channel, int loops);
        -:   33:
        -:   34:    static void remove_events();
        -:   35:
        -:   36:    static std::tuple<int, int> get_display_resolution();
        -:   37:    [[nodiscard]] std::tuple<int, int> get_mouse_position() const;
        -:   38:
        -:   39:    [[nodiscard]] float get_global_scale_x() const;
        -:   40:    [[nodiscard]] float get_global_scale_y() const;
        -:   41:
        -:   42:    void quit(int code);
        -:   43:private:
        -:   44:    SDL_Window *_window;
        -:   45:    SDL_Renderer *_renderer;
        -:   46:
        -:   47:    SDL_Rect _rect{};
        -:   48:
        -:   49:    std::vector<std::tuple<SDL_Texture*, std::string>> _textures;
        -:   50:    std::vector<std::tuple<Mix_Chunk*, std::string>> _sounds;
        -:   51:    std::vector<std::tuple<TTF_Font*, std::string>> _fonts;
        -:   52:
        -:   53:    float _global_scale_x;
        -:   54:    float _global_scale_y;
        -:   55:};
